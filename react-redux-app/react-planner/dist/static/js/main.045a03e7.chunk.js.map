{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","catch","err","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","console","log","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.045a03e7.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <button onClick={props.signOut}>Log Out</button>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNOUT_ERROR\", err });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((res) => {\n        return firestore\n          .collection(\"users\")\n          .doc(res.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst NavBar = props => {\n  const { auth, profile } = props;\n\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Mario Plan\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\nexport default connect(mapStateToProps)(NavBar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map((item) => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user}</span>\n                    <span> {item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport * as moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          Posted by {project.authorFirstName} {project.authorLastName}{\" \"}\n        </p>\n        <p className=\"grey-text\">\n          {moment(project.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div>\n      {projects &&\n        projects.map((project) => {\n          return (\n            <Link to={\"project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    //console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects, //accessing this from the root reducer, which has a project. That project has the 'projects' property\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as moment from \"moment\";\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if (!auth.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  console.log(state);\n  return { project: project, auth: state.firebase.auth };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: \"projects\"\n    }\n  ])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            </div>\n\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n\n  handleChange = (e) => {\n    console.log(e);\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.signUp(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            </div>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    //console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div>\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"content\">Project Content</label>\n              <textarea\n                id=\"content\"\n                className=\"materialize-textarea\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">\n                Create Project\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","export const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({\n          type: \"CREATE_PROJECT\",\n          project\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: \"CREATE_PROJECT_ERROR\",\n          err\n        });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"Login error\");\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"Login success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"Sign out success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_ERROR\":\n      console.log(\"Sign out success\");\n      return {\n        ...state,\n        authError: \"Sign out failure\"\n      };\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"Sign up success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"Sign up error\");\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: \"1\", title: \"find the heart key\", content: \"blah blah blah\" },\n    {\n      id: \"2\",\n      title: \"get the second electric component\",\n      content: \"blah blah blah\"\n    },\n    { id: \"3\", title: \"install the large gear\", content: \"blah blah blah\" }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      break;\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"Project creation error!\", action.err);\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyCSroDrxkEPKd1Tc8OQrL3283KFqPh1DEU\",\n  authDomain: \"net-ninja-marioplan-8661a.firebaseapp.com\",\n  databaseURL: \"https://net-ninja-marioplan-8661a.firebaseio.com\",\n  projectId: \"net-ninja-marioplan-8661a\",\n  storageBucket: \"net-ninja-marioplan-8661a.appspot.com\",\n  messagingSenderId: \"288044752051\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({\n  timestampsInSnapshots: true\n});\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(\n      thunk.withExtraArgument({\n        getFirebase,\n        getFirestore\n      })\n    ),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}